{"ast":null,"code":"import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(loginData) {// return axios.post('/user/login', loginData,{\n  //     withCredentials: true\n  // });\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignUp), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/udemy-sass/front/sagas/user.js"],"names":["all","call","fork","put","takeEvery","axios","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","logInAPI","loginData","login","action","result","loginAPI","data","type","e","console","error","watchLogin","signUpAPI","signUpData","post","signUp","watchSignUp","logOutAPI","withCredentials","logOut","watchLogOut","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,SAA9B,QAA8C,oBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,iBADJ,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,eARF,EASEC,eATF,EAUEC,eAVF,EAWEC,eAXF,EAYEC,eAZF,QAaO,kBAbP;;AAeA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B,CACzB;AACA;AACA;AACH;;AAED,UAAWC,KAAX,CAAiBC,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMrB,IAAI,CAACsB,QAAD,EAAWF,MAAM,CAACG,IAAlB,CAAzB;AACA,UAAMrB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAAEd,cADA;AAENa,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAME,CAAN,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMvB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAAEhB;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUoB,UAAV,GAAsB;AAClB,QAAMzB,SAAS,CAACM,cAAD,EAAiBU,KAAjB,CAAf;AACH;;AAED,SAASU,SAAT,CAAmBC,UAAnB,EAA8B;AAC1B,SAAO1B,KAAK,CAAC2B,IAAN,CAAW,OAAX,EAAoBD,UAApB,CAAP;AACH;;AAED,UAAUE,MAAV,CAAiBZ,MAAjB,EAAwB;AACpB,MAAG;AACC;AACA,UAAMlB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAAER;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMS,CAAN,EAAQ;AACNC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMvB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAAEV,eADA;AAENa,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,WAAV,GAAuB;AACnB,QAAM9B,SAAS,CAACY,eAAD,EAAkBiB,MAAlB,CAAf;AACH;;AAED,SAASE,SAAT,GAAoB;AAChB,SAAO9B,KAAK,CAAC2B,IAAN,CAAW,cAAX,EAA2B,EAA3B,EAA+B;AAClCI,IAAAA,eAAe,EAAE;AADiB,GAA/B,CAAP;AAGH;;AAED,UAAUC,MAAV,GAAmB;AACf,MAAI;AACA,UAAMpC,IAAI,CAACkC,SAAD,CAAV;AACA,UAAMhC,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAAEX;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMY,CAAN,EAAQ;AACNC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMvB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAAEb,eADA;AAENgB,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AACD,UAAWY,WAAX,GAAyB;AACrB,QAAMlC,SAAS,CAACS,eAAD,EAAkBwB,MAAlB,CAAf;AACH;;AACD,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAMvC,GAAG,CAAC,CACNE,IAAI,CAACgC,WAAD,CADE,EAENhC,IAAI,CAACoC,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all, call, fork, put, takeEvery} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    LOAD_USER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(loginData) {\r\n    // return axios.post('/user/login', loginData,{\r\n    //     withCredentials: true\r\n    // });\r\n}\r\n\r\nfunction * login(action){\r\n    try{\r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        }); \r\n    } catch(e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction signUpAPI(signUpData){\r\n    return axios.post('/user', signUpData);\r\n}\r\n\r\nfunction* signUp(action){\r\n    try{\r\n        // yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp); \r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post('/user/logout', {}, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        })\r\n    } catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: e \r\n        })\r\n    }\r\n}\r\nfunction * watchLogOut() {\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut); \r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchSignUp),\r\n        fork(watchLogOut) \r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}