{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar dummyUser = {\n  nickname: '윤재원',\n  id: 1\n};\nexport var initialState = {\n  isLoading: false,\n  isLoggingOut: false,\n  isLoggingIn: false,\n  logInErrorReason: '',\n  isSignedUp: false,\n  isSiginingUp: false,\n  signUpErrorReason: '',\n  me: null,\n  shopList: []\n}; // 회원가입 \n\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; // 로그인\n\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n// 유저 정보 불러오기 \n\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE'; // 로그아웃\n\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: '',\n          isLoading: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          logInErrorReason: action.errror,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case LOG_OUT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSiginingUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/udemy-sass/front/reducers/user.js"],"names":["dummyUser","nickname","id","initialState","isLoading","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSiginingUp","signUpErrorReason","me","shopList","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","state","action","type","data","errror","isSigningUp","error"],"mappings":"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","sourcesContent":["const dummyUser = {\r\n    nickname: '윤재원',\r\n    id:1,\r\n}\r\n\r\nexport const initialState = {\r\n    isLoading: false, \r\n    isLoggingOut: false,\r\n    isLoggingIn: false,\r\n    logInErrorReason: '',\r\n    isSignedUp: false,\r\n    isSiginingUp: false,\r\n    signUpErrorReason: '',\r\n    me: null,\r\n    shopList: [],\r\n}\r\n// 회원가입 \r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n// 로그인\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\n// 유저 정보 불러오기 \r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n// 로그아웃\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport default (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            return{\r\n                ...state,\r\n                isLoggingIn: true,\r\n                logInErrorReason: '',\r\n                isLoading: true \r\n            };\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                me: action.data,\r\n                isLoading: false  \r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false, \r\n                logInErrorReason: action.errror,\r\n                me: null \r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            }\r\n        }\r\n        case LOG_OUT_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                isLoggingOut: false, \r\n                me:null\r\n            }\r\n        }\r\n        case LOG_OUT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isSigningUp:true,\r\n                isSignedUp: false, \r\n                signUpErrorReason: '', \r\n            }\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isSiginingUp: false, \r\n                isSignedUp: true \r\n            }\r\n        }\r\n        case SIGN_UP_FAILURE: {\r\n            return{\r\n                ...state,\r\n                isSigningUp: false, \r\n                signUpErrorReason: action.error\r\n            }\r\n        }\r\n        case LOAD_USER_REQUEST: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case LOAD_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                me:action.data\r\n            }\r\n        }\r\n        case LOAD_USER_FAILURE: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state \r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}