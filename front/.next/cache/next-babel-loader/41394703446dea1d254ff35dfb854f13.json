{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(loginData) {// return axios.post('/user/login', loginData,{\n  //     withCredentials: true\n  // });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 3:\n          _context3.next = 10;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 10;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 5]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchSignUp), fork(watchLogOut)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/udemy-sass/front/sagas/user.js"],"names":["login","watchLogin","signUp","watchSignUp","logOut","watchLogOut","userSaga","all","call","fork","put","takeEvery","axios","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","logInAPI","loginData","action","loginAPI","data","result","type","console","error","signUpAPI","signUpData","post","logOutAPI","withCredentials"],"mappings":"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","sourcesContent":["import {all, call, fork, put, takeEvery} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    LOAD_USER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(loginData) {\r\n    // return axios.post('/user/login', loginData,{\r\n    //     withCredentials: true\r\n    // });\r\n}\r\n\r\nfunction * login(action){\r\n    try{\r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        }); \r\n    } catch(e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction signUpAPI(signUpData){\r\n    return axios.post('/user', signUpData);\r\n}\r\n\r\nfunction* signUp(action){\r\n    try{\r\n        // yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e \r\n        }); \r\n    }\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp); \r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post('/user/logout', {}, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        })\r\n    } catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: e \r\n        })\r\n    }\r\n}\r\nfunction * watchLogOut() {\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut); \r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchSignUp),\r\n        fork(watchLogOut) \r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}