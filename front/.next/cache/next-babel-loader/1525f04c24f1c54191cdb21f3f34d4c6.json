{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaewon\\\\Desktop\\\\web\\\\udemy-sass\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport rootReducer from '../reducers';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nconst App = ({\n  Component,\n  store\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })));\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(rootReducer, initialState, enhancer);\n  return store;\n};\n\nexport default withRedux(configureStore)(App);","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/udemy-sass/front/pages/_app.js"],"names":["React","Head","Provider","withRedux","rootReducer","createStore","compose","applyMiddleware","createSagaMiddleware","App","Component","store","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;AACA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAChC,SACI,4BACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,IAAI,EAAC,kEAAX;AAA8E,IAAA,GAAG,EAAC,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAUH,CAXD;;AAYA,MAAMC,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC9C,QAAMC,cAAc,GAAGP,oBAAoB,EAA3C;AACA,QAAMQ,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACXd,OAAO,CAACC,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CADI,GAEXV,OAAO,CAACC,eAAe,CAAC,GAAGS,WAAJ,CAAhB,EACT,CAACF,OAAO,CAACO,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA2HC,CAAD,IAAOA,CADxH,CAFb;AAKA,QAAMb,KAAK,GAAGN,WAAW,CAACD,WAAD,EAAcS,YAAd,EAA2BI,QAA3B,CAAzB;AACA,SAAON,KAAP;AACH,CAVD;;AAWA,eAAeR,SAAS,CAACS,cAAD,CAAT,CAA0BH,GAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport {Provider} from 'react-redux'; \r\nimport withRedux from 'next-redux-wrapper';\r\nimport rootReducer from '../reducers';\r\nimport {createStore, compose, applyMiddleware} from 'redux'; \r\nimport createSagaMiddleware from 'redux-saga';\r\nconst App = ({Component, store}) => {\r\n    return(\r\n        <>\r\n            <Provider store={store}>\r\n                <Head>\r\n                    <link href=\"https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900\" rel=\"stylesheet\"/>\r\n                </Head>\r\n                <Component />\r\n            </Provider> \r\n        </>\r\n    )\r\n}\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware]; \r\n    const enhancer = process.env.NODE_ENV === 'production' \r\n        ? compose(applyMiddleware(...middlewares)) \r\n        : compose(applyMiddleware(...middlewares),\r\n        !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\r\n        );\r\n    const store = createStore(rootReducer, initialState,enhancer);\r\n    return store; \r\n}\r\nexport default withRedux(configureStore)(App);"]},"metadata":{},"sourceType":"module"}