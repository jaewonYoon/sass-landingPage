{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jaewon\\\\Desktop\\\\web\\\\udemy-sass\\\\front\\\\components\\\\SignInForm.Component.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Checkbox, Icon, Button } from 'antd';\nimport { SIGN_IN_REQUEST } from '../reducers/user';\nexport var useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      value = _useState[0],\n      setter = _useState[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nvar SignInForm = function SignInForm(props) {\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      passwordError = _useInput6[0],\n      setpasswordError = _useInput6[1];\n\n  var _useInput7 = useInput(''),\n      _useInput8 = _slicedToArray(_useInput7, 2),\n      confirmDirty = _useInput8[0],\n      setConfirmDirty = _useInput8[1];\n\n  var _useSelector = useSelector(function (selector) {\n    return selector.user;\n  }),\n      isSigningUp = _useSelector.isSigningUp;\n\n  var getFieldDecorator = props.form.getFieldDecorator;\n  var dispatch = useDispatch();\n  useEffect(function (e) {}, []);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!(id && password)) {\n      return false;\n    }\n\n    console.log({\n      id: id,\n      password: password,\n      checkTerm: checkTerm\n    });\n    dispatch({\n      type: SIGN_UP_REQUEST\n    });\n  }, [id, password]);\n\n  var passwordValidate = function passwordValidate(rule, value, callback) {\n    var form = props.form;\n\n    if (value & form && !form.getFieldValue('password').length < 4) {\n      callback('비밀번호를 올바르게 입력해주세요.');\n    } else {\n      callback();\n    }\n  };\n\n  var validateToNextPassword = function validateToNextPassword(rule, value, callback) {\n    var form = props.form;\n\n    if (value && form && confirmDirty) {\n      form.validateFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    label: \"\\uC774\\uBA54\\uC77C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: '올바른 이메일 형식이 아닙니다.'\n    }, {\n      required: true,\n      message: '이메일을 입력해주세요.'\n    }]\n  })(__jsx(Input, {\n    placeholder: \"E-mail\",\n    prefix: __jsx(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }),\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: '비밀번호를 입력하세요'\n    }, {\n      validator: passwordValidate\n    }]\n  })(__jsx(Input.Password, {\n    placeholder: \"Password\",\n    prefix: __jsx(Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }),\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      \"float\": 'right'\n    },\n    loading: isSigningUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778\"))));\n};\n\nexport default Form.create({\n  name: 'signIn'\n})(SignInForm);","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/udemy-sass/front/components/SignInForm.Component.jsx"],"names":["React","useCallback","useEffect","useState","useSelector","useDispatch","Form","Input","Checkbox","Icon","Button","SIGN_IN_REQUEST","useInput","initValue","value","setter","handler","e","target","SignInForm","props","id","onChangeId","password","onChangePassword","passwordError","setpasswordError","confirmDirty","setConfirmDirty","selector","user","isSigningUp","getFieldDecorator","form","dispatch","onSubmit","preventDefault","console","log","checkTerm","type","SIGN_UP_REQUEST","passwordValidate","rule","callback","getFieldValue","length","validateToNextPassword","validateFields","force","rules","message","required","color","validator","create","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,WAAd,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,IAAR,EAAaC,KAAb,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAgD,MAAhD;AACA,SAAQC,eAAR,QAA8B,kBAA9B;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAoB;AAAA,MAAnBC,SAAmB,uEAAT,IAAS;;AAAA,kBACjBV,QAAQ,CAACU,SAAD,CADS;AAAA,MACjCC,KADiC;AAAA,MAC3BC,MAD2B;;AAExC,MAAMC,OAAO,GAAGf,WAAW,CAAE,UAACgB,CAAD,EAAO;AAChCF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAN;AACH,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO,CAACA,KAAD,EAAQE,OAAR,CAAP;AACH,CANM;;AAQP,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,kBACHR,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,MACnBS,EADmB;AAAA,MAChBC,UADgB;;AAAA,mBAEWV,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAEnBW,QAFmB;AAAA,MAETC,gBAFS;;AAAA,mBAGgBZ,QAAQ,CAAC,EAAD,CAHxB;AAAA;AAAA,MAGnBa,aAHmB;AAAA,MAGJC,gBAHI;;AAAA,mBAIcd,QAAQ,CAAC,EAAD,CAJtB;AAAA;AAAA,MAInBe,YAJmB;AAAA,MAILC,eAJK;;AAAA,qBAMJxB,WAAW,CAAC,UAAAyB,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAAT,CANP;AAAA,MAMnBC,WANmB,gBAMnBA,WANmB;;AAAA,MAOnBC,iBAPmB,GAOEZ,KAAK,CAACa,IAPR,CAOnBD,iBAPmB;AAS1B,MAAME,QAAQ,GAAG7B,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAE,UAACe,CAAD,EAAO,CACjB,CADQ,EACP,EADO,CAAT;AAGA,MAAMkB,QAAQ,GAAGlC,WAAW,CAAC,UAACgB,CAAD,EAAO;AAC3BA,IAAAA,CAAC,CAACmB,cAAF;;AACA,QAAG,EAAEf,EAAE,IAAIE,QAAR,CAAH,EAAsB;AAClB,aAAO,KAAP;AACH;;AACDc,IAAAA,OAAO,CAACC,GAAR,CAAY;AACRjB,MAAAA,EAAE,EAAFA,EADQ;AAERE,MAAAA,QAAQ,EAARA,QAFQ;AAGRgB,MAAAA,SAAS,EAATA;AAHQ,KAAZ;AAKAL,IAAAA,QAAQ,CAAC;AACNM,MAAAA,IAAI,EAACC;AADC,KAAD,CAAR;AAGR,GAb2B,EAa1B,CAACpB,EAAD,EAAIE,QAAJ,CAb0B,CAA5B;;AAeA,MAAMmB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAO7B,KAAP,EAAc8B,QAAd,EAA2B;AAAA,QACzCX,IADyC,GACjCb,KADiC,CACzCa,IADyC;;AAEhD,QAAGnB,KAAK,GAAGmB,IAAR,IAAgB,CAACA,IAAI,CAACY,aAAL,CAAmB,UAAnB,EAA+BC,MAAhC,GAAyC,CAA5D,EAA8D;AAC1DF,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ,GAPD;;AAWA,MAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACJ,IAAD,EAAO7B,KAAP,EAAc8B,QAAd,EAA2B;AAAA,QAC/CX,IAD+C,GACvCb,KADuC,CAC/Ca,IAD+C;;AAEtD,QAAGnB,KAAK,IAAImB,IAAT,IAAiBN,YAApB,EAAkC;AAC9BM,MAAAA,IAAI,CAACe,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAjC;AACH;;AACDL,IAAAA,QAAQ;AACX,GAND;;AAQA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAET,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQH,iBAAiB,CAAC,OAAD,EAAU;AACvBkB,IAAAA,KAAK,EAAE,CACH;AACIV,MAAAA,IAAI,EAAE,OADV;AAEIW,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEID,MAAAA,OAAO,EAAE;AAFb,KALG;AADgB,GAAV,CAAjB,CAWG,MAAC,KAAD;AACC,IAAA,WAAW,EAAC,QADb;AAEC,IAAA,MAAM,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFT;AAGC,IAAA,QAAQ,EAAE/B,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CAFR,CADJ,EAqBI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,0BAAjB;AAAwB,IAAA,WAAW,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,iBAAiB,CAAC,UAAD,EAAa;AAC3BkB,IAAAA,KAAK,EAAE,CACH;AACIE,MAAAA,QAAQ,EAAE,IADd;AAEID,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIG,MAAAA,SAAS,EAAEZ;AADf,KALG;AADoB,GAAb,CAAjB,CAUE,MAAC,KAAD,CAAO,QAAP;AACC,IAAA,WAAW,EAAC,UADb;AAEC,IAAA,MAAM,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFT;AAGC,IAAA,QAAQ,EAAI7B,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADL,CArBJ,EAsCI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,QAAQ,EAAC,QAFb;AAGI,IAAA,KAAK,EAAE;AAAC,eAAO;AAAR,KAHX;AAII,IAAA,OAAO,EAAEO,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAtCJ,CADJ,CADJ;AAmDH,CAlGD;;AAoGA,eAAezB,IAAI,CAACiD,MAAL,CAAY;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAZ,EAA6BrC,UAA7B,CAAf","sourcesContent":["import React,{useCallback,useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'; \r\nimport {Form,Input,Checkbox, Icon, Button} from 'antd';\r\nimport {SIGN_IN_REQUEST} from '../reducers/user'; \r\nexport const useInput = (initValue=null) => {\r\n    const [value,setter] = useState(initValue);\r\n    const handler = useCallback( (e) => {\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler]; \r\n}\r\n\r\nconst SignInForm = (props) => {\r\n    const [id,onChangeId] =useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const [passwordError, setpasswordError] = useInput('');\r\n    const [confirmDirty, setConfirmDirty] = useInput('');\r\n    \r\n    const {isSigningUp} = useSelector(selector => selector.user); \r\n    const {getFieldDecorator} = props.form; \r\n    \r\n    const dispatch = useDispatch(); \r\n    useEffect( (e) => {\r\n    },[]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n             e.preventDefault(); \r\n             if(!(id && password)) {\r\n                 return false; \r\n             }\r\n             console.log({\r\n                 id,\r\n                 password,\r\n                 checkTerm\r\n             })\r\n             dispatch({\r\n                type:SIGN_UP_REQUEST   \r\n             })\r\n    },[id,password]);\r\n    \r\n    const passwordValidate = (rule, value, callback) => {\r\n        const {form} = props;\r\n        if(value & form && !form.getFieldValue('password').length < 4){\r\n            callback('비밀번호를 올바르게 입력해주세요.');\r\n        } else {\r\n            callback(); \r\n        }\r\n    }\r\n\r\n  \r\n\r\n    const validateToNextPassword = (rule, value, callback) => {\r\n        const {form} = props;\r\n        if(value && form && confirmDirty) {\r\n            form.validateFields(['confirm'], {force: true})\r\n        }\r\n        callback();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Item label=\"이메일\">\r\n                    {\r\n                        getFieldDecorator('email', {\r\n                            rules: [\r\n                                {\r\n                                    type: 'email',\r\n                                    message: '올바른 이메일 형식이 아닙니다.'\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: '이메일을 입력해주세요.'\r\n                                },\r\n                            ]\r\n                        })(<Input\r\n                            placeholder=\"E-mail\"\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            onChange={onChangeId}\r\n                            />)\r\n                    }\r\n                </Form.Item >\r\n                <Form.Item label=\"비밀번호\" hasFeedback>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '비밀번호를 입력하세요'\r\n                            },\r\n                            {\r\n                                validator: passwordValidate \r\n                            }\r\n                        ]\r\n                    })(<Input.Password \r\n                        placeholder=\"Password\"\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        onChange = {onChangePassword}\r\n                        />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button \r\n                        type=\"primary\" \r\n                        htmlType=\"submit\" \r\n                        style={{float: 'right'}}\r\n                        loading={isSigningUp}\r\n                    >로그인</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form.create({name:'signIn'})(SignInForm);"]},"metadata":{},"sourceType":"module"}